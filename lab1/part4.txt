4.1
    1. Functional Dependencies
        StudentID → StudentName, StudentMajor
        ProjectID → ProjectTitle, ProjectType, SupervisorID
        SupervisorID → SupervisorName, SupervisorDept
        (StudentID, ProjectID) → Role, HoursWorked, StartDate, EndDate

    2.Problems in the Table
        Redundancy
            Student information repeats for every project that the student joins.
            Project information repeats for every student in the same project.
            Supervisor information repeats for every project supervised by the same person.
        Anomalies
            Update anomaly: If a supervisor changes department you must update many rows; inconsistent data can appear.
            Insert anomaly: You cannot add a new project or supervisor unless at least one student is already assigned.
            Delete anomaly: If the last student leaves a project and you delete that row, you lose the project and supervisor data.

    3.  First Normal Form (1NF)
            All attributes are atomic; there are no repeating groups.
            The table already satisfies 1NF.
        Second Normal Form (2NF)
            Primary key: (StudentID, ProjectID).
            Partial dependencies:
            StudentID → StudentName, StudentMajor
            ProjectID → ProjectTitle, ProjectType, SupervisorID
            These attributes depend on part of the composite key, so 2NF is violated.
        2NF Decomposition
            Student(StudentID PK, StudentName, StudentMajor)
            Supervisor(SupervisorID PK, SupervisorName, SupervisorDept)
            Project(ProjectID PK, ProjectTitle, ProjectType, SupervisorID FK)
            StudentProject(StudentID FK, ProjectID FK, Role, HoursWorked, StartDate, EndDate)
        
4.2
CourseSchedule(StudentID, StudentMajor, CourseID, CourseName, 
 InstructorID, InstructorName, TimeSlot, Room, Building)
 
    1. Primary key is composite(StudentID,CourseID, TimeSlot, Room)
    2.  StudentId -> StudentMajor
        InstructorID -> InstructorName
        room - building
        (CourseID, TimeSlot, Room) -> InstructorID
    3. No. BCNF requires that for every nontrivial FD X → Y, X must be a superkey.
    4.  Student(StudentID, StudentMajor)
        Course(CourseID, CourseName)
        Instructor(InstructorID, InstructorName)
        Room(Room, Building)
        Section(CourseID, TimeSlot, Room, InstructorID) – describes each course section
        Enrollment(StudentID, CourseID, TimeSlot, Room) – which student takes which section
    5.  This decomposition removes redundancy (student major, course name, instructor name, building are stored once).
        The Enrollment relation keeps the enrollment facts (who attends which section) and references the small relations 
        by foreign keys.